/**
* Pure CSS Responsive Grid Overlay
* README: https://github.com/larsenwork/Pure-CSS-Responsive-Grid-Overlay
*/

:root {
    --grid-display: block; /* block / none */
    --grid-z_index: 1000; /* Should be bigger than any used on the site */
    --grid-opacity: 0.3; /* Overall grid opacity */
    --grid-row-opacity: 0.7; /* 1 = same as columns, 0 = invisible */

    --media-query: 'Base';
    --grid-row-height: 4px;
    --grid-row-distance-top: 3px; /* Must be smaller than grid-row-height */
    --grid-column-count: 6;
    --grid-offset: 16px;
    --grid-gutter: 8px;
    --grid-hsl-color: 190, 100%, 50%;
}

/**
 * Override settings at bigger screen sizes
 */
@media (min-width: 560px) {
    :root {
        --media-query: 'Small';
        --grid-offset: 32px;
        --grid-gutter: 12px;
        --grid-hsl-color: 10, 100%, 58%;
    }
}

@media (min-width: 768px) {
    :root {
        --media-query: 'Medium';
        --grid-column-count: 12;
        --grid-offset: 40px;
        --grid-gutter: 16px;
        --grid-hsl-color: 190, 100%, 50%;
    }
}

@media (min-width: 1100px) {
    :root {
        --media-query: 'Large';
        --grid-offset: 48px;
        --grid-hsl-color: 10, 100%, 58%;
        --grid-max_width: 1184px;
    }
}

/**
 * "Mixins" — You probably don't need to edit anything here
 */
:root {
    --grid-column-color: hsl(var(--grid-hsl-color));
    --grid-baseline-color: hsla(var(--grid-hsl-color), var(--grid-row-opacity));
    --grid-columns: linear-gradient(to right,
        var(--grid-column-color),
        var(--grid-column-color) 1px,
        transparent 1px,
        transparent calc(100% - var(--grid-gutter) - 1px),
        var(--grid-column-color) calc(100% - var(--grid-gutter) - 1px),
        var(--grid-column-color) calc(100% - var(--grid-gutter)),
        transparent calc(100% - var(--grid-gutter)),
        transparent
        );
    --grid-rows: linear-gradient(
        transparent var(--grid-row-distance-top),
        var(--grid-baseline-color) var(--grid-row-distance-top),
        var(--grid-baseline-color) calc(var(--grid-row-distance-top) + 1px),
        transparent calc(var(--grid-row-distance-top) + 1px)
        );
}

/**
 * Styling — html::pseudoes but could use <body> or a <div id="app"> type thing
 */
html {
    position: relative;
    min-width: 100vw;
    min-height: 100vh;
}

html::before,
html::after {
    display: var(--grid-display);
    z-index: var(--grid-z_index);
    opacity: var(--grid-opacity);
}

html::before {
    content: var(--media-query, 'Unspecified Media Query');
    position: fixed;
    top: 0.25rem;
    left: 0.25rem;
    color: var(--grid-column-color);
}

html::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: calc(100% - 2 * var(--grid-offset));
    max-width: var(--grid-max_width, none);
    margin-right: auto;
    margin-left: auto;
    background-image:
        var(--grid-columns),
        var(--grid-rows);
    background-size:
        calc((100% + var(--grid-gutter)) / var(--grid-column-count))
        var(--grid-row-height);
    pointer-events: none;
    z-index: var(--grid-z_index);
}
